{"version":3,"sources":["assets/img/xtronlong.png","Utils/Utils.js","Common/ToastContainerCust.js","Components/Registration/Registration.js"],"names":["utils","tronWeb","contract","setTronWeb","at","ToastContainerCust","autoClose","position","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","Registration","props","lang","location","state","history","useHistory","useState","backOfficeID","SetBackOfficeID","loggedIn","setLoggedIn","isModalOpen","SetisModalOpen","installed","settronWeb","id","useParams","CustomToastWithLink","useEffect","a","Promise","resolve","tronWebState","window","ready","tries","timer","setInterval","TRONGRID_API","process","REACT_APP_NETWORK","TronWeb","clearInterval","Utils","registationSubmit","warnmsg","localStorage","removeItem","undefined","toast","warn","hideProgressBar","pauseOnHover","draggable","progress","idToAddress","call","tronAdd","address","fromHex","registrationExt","send","feeLimit","callValue","shouldPollResponse","push","pathname","reload","console","log","error","className","src","xtronLogo","alt","to","style","width","active","type","value","onChange","e","target","readOnly","onClick","disabled"],"mappings":"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","file":"static/js/2.085651d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/xtronlong.12848e6d.png\";","// const contract_address = \"TF46MbUFEDZm1Q6yi8FWa1FkqPLC3QGDMZ\"\n// const contract_address = \"TLaXfyrdGqQWjYMWVC1KQBYwZvuYwVtJXE\"\n// const contract_address = \"TFp4R6eG3EMHvPEfKCMUs29p5VLiaN8fdd\"\n// const contract_address = \"TTpGpJ1JN75ioXm8k1LhCWFEQqGbptyzAF\"\n//xtron-real\n//const contract_address = \"TWDECXnA4oAGrDYRNS7ex1izx3Mgys9SRp\"\n//xtron-shasta\n//const contract_address = \"TQrmGowd3HkCJrHNgDwNAsqSyfkKj6mFXc\"\n//const contract_address = \"TEzd5H6uQ1EbcUgrnn3MTBcykkyFgrPE5z\"\n//const contract_address = \"THK1ZCLjmD9dN8qcpYSkoa2E4gYpJ4EhH2\"\n//const contract_address = \"TLsW2M4tMghftba1cymJeFdwezyKfovuci\"\n//const contract_address = \"TYx9J1Yr7VPDhxsdRcfjGrZPGhRykK1Uwy\"\n//const contract_address = \"TQ1ER4kAy4CoLLmx9tuFPZwVv33JbvLRXu\" \n//const contract_address = \"TYjd4gRFqEXinRVDqUWESUzcGzg47uM4Fk\"\n//const contract_address = \"TPzeGJ3fi65cjp4deTGm5NfLDfhPgkim5a\"\n//const contract_address = \"TWyG1ofLtjAdkUE2Ac1TYHM4FnyUKESAJL\"\n//const contract_address = \"TEW4nvU1LQYCbWdhuoFid6vidBKD4A4v3h\"\n//const contract_address = \"TNgXUtpZ58dMsGSnGAbKntm1H4fqzK838x\"\n//const contract_address = \"TLm8n7AwTHyJaDW77jvCgoXT4XEBYxx1aQ\"\n//const contract_address = \"TFa9JhkFctXPRB3xFnF9TfGKMiPcXVe5oB\"\n\n//const contract_address = \"TAiYzX6z1dMz6aWqNYx4X5fKdJLWAYrBUg\"\n//const contract_address = \"TSsh4YKeqDKt8YBR4kDQhLnJTGvyaWyeib\"\n\n//const contract_address = \"TGB28XpmdSevBrDE7sFNGQUexBtzvVJgm7\"\n//const contract_address = \"TEe34ejtmHiRuqEGtCAn58T3W6hmZawoJV\"\n\n\n//Problem\n//const contract_address = \"TEy8sahvs3G9AWHMeRgvH5beMCZvAU59tt\"\n\n//Works 7ish...\n//const contract_address = \"TXbcJMDCNM9oZaV8eJLRsXkEEcKC28X99z\"\n\n//Debugging...(Broken)\n//const contract_address = \"TF4j7n6uiz7kxr6eQHghgLVVU4kZfAHWGZ\"\n\n//Fixing....\n//const contract_address = \"TWq6mzqMTEjyLLMXGsqFV1QYjDzbg8MP3J\"\n\n//M2 Ciclado Fixed! Yay!\n//const contract_address = \"TFbxXnX47JXKFXgvHmsHRkdwCaAPnbzNby\"\n\n//M2 10 CTAs\n//const contract_address = \"TUaQVqSjEpaHEEXDjZMKJfrXFpqHFAScHa\"\n\n//Good distrution m2 (round robin), missing referrals\n//const contract_address = \"TD58SzWvCBqJEb2RChtvhe4UXjSk4og9mr\"\n\n//const contract_address = \"TF9VPpAKcYpL4X5x12RWm3WuQSVkv529Rc\"\n\n//Deployed by George\n//const contract_address = \"TFa9JhkFctXPRB3xFnF9TfGKMiPcXVe5oB\"\n\n\n//Contract with 50% discount in packages\n//const contract_address = \"TQe5ExxEQpnBGBRkLu4mTDDGRLrudyugrD\"\n//.env\n//const contract_address = process.env.REACT_APP_CONTRACT_ADDRESS\n\n//const contract_address = \"TN8RbeAzW7YA5yuFYAVG42qjJR63DsE1ZN\"\n\n//const contract_address = \"TBLhDkhyXaYESKf9UvB1BQrVXPX6ubjdHo\"\n//const contract_address = \"THsHA3v4zeySDS7AWzavGmPf7yYMTQzxja\"\n\n//Avoid buying next level\n//const contract_address = \"TE1xmorEjAZYu2LaLiAff26KgSbrvWNSgU\"\n\n\n//const contract_address = \"TYqqp7vvPhhTFZWcpWgDm5Hf1EPSC55z97\"\n\nconst contract_address =  \"TXWtPvKykN2QXip95PCej3biC5dVb9S4oy\"\n\nconst utils = {\n    tronWeb: false,\n    contract: false,\n\n    async setTronWeb(tronWeb) {\n        this.tronWeb = tronWeb;\n        this.contract = await tronWeb.contract().at(contract_address)\n    },\n\n};\n\nexport default utils;\n","import React from 'react'\nimport { ToastContainer } from 'react-toastify';\n\n\nfunction ToastContainerCust({ autoClose = 3000 }) {\n    return (\n        <ToastContainer\n            position=\"top-center\"\n            autoClose={autoClose}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n        />\n    )\n}\n\nexport default ToastContainerCust\n","import React, { useEffect, useState } from 'react'\nimport xtronLogo from '../../assets/img/xtronlong.png'\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport TronWeb from 'tronweb'\nimport { toast } from 'react-toastify';\nimport { FaExclamationCircle, FaSignInAlt } from \"react-icons/fa\";\nimport ToastContainerCust from '../../Common/ToastContainerCust'\nimport Utils from '../../Utils/Utils'\nimport { MyClockLoader } from '../../Common/Loader'\n\n\nfunction Registration(props) {\n    const lang = props.location && props.location.state\n    const history = useHistory();\n    const [backOfficeID, SetBackOfficeID] = useState('')\n    const [loggedIn, setLoggedIn] = useState(false)\n    const [isModalOpen, SetisModalOpen] = useState(false)\n    const [tronWeb, settronWeb] = useState({\n        installed: false,\n        loggedIn: false\n    })\n    const { id } = useParams();\n    const CustomToastWithLink = () => (\n        <p>\n            Please login to your Tronlink account\n        </p>\n    );\n\n    useEffect(async () => {\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n            };\n\n            if (tronWebState.installed) {\n                settronWeb(tronWebState)\n                return resolve();\n            }\n            let tries = 0;\n            const timer = setInterval(() => {\n                if (tries >= 10) {\n                    const TRONGRID_API = process.env.REACT_APP_NETWORK;\n                    window.tronWeb = new TronWeb(\n                        TRONGRID_API,\n                        TRONGRID_API,\n                        TRONGRID_API\n                    );\n                    settronWeb({\n                        installed: false,\n                        loggedIn: false\n                    });\n                    clearInterval(timer);\n                    return resolve();\n                }\n                tronWebState.installed = !!window.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n                if (!tronWebState.installed) {\n                    return tries++;\n                }\n                else {\n                    clearInterval(timer);\n                }\n                settronWeb(tronWebState)\n\n                resolve();\n            }, 100);\n        })\n        await Utils.setTronWeb(window.tronWeb);\n        setLoggedIn(true)\n    }, []);\n\n    const registationSubmit = async () => {\n        let warnmsg = \"Porfavor no actualice la página y espere mientras su pago es procesado. Esto puede tardar unos minutos.\"\n\n        localStorage.removeItem('backOfficeID')\n        if (backOfficeID !== '' || id !== undefined) {\n            if (loggedIn) {\n                try {\n                    SetisModalOpen(true)\n                    if (lang === 'English') {\n                        warnmsg = \"Please do not refresh the page and wait while your payment is processed. This may take a few minutes.\"\n                    }\n                    toast.warn(warnmsg, {\n                        position: \"top-center\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: false,\n                        draggable: true,\n                        progress: undefined,\n                    });\n                    const idToAddress = await Utils.contract.idToAddress(backOfficeID).call();\n                    const tronAdd = TronWeb.address.fromHex(idToAddress)\n                    await Utils.contract.registrationExt(tronAdd).send({\n                        feeLimit: 300000000,\n                        callValue: 440000000,\n                        shouldPollResponse: true\n                    });\n                    SetisModalOpen(false)\n                    history.push({\n                        pathname: \"/back-office-main\",\n                        state: { lang: lang }\n                    })\n                    \n                    window.location.reload(false);\n                } catch (error) {\n                    SetisModalOpen(false)\n                    console.log(error)\n                    toast.error(\"error\", error)\n                }\n            }\n            else {\n                toast.error(CustomToastWithLink)\n            }\n        }\n        else {\n            if (lang === 'English') {\n                toast.warn(\"Enter your sponsor's ID\")\n            }\n            else {\n                toast.warn(\"Ingrese el ID de su patrocinador\")\n            }\n        }\n    }\n\n    return (\n        <div className=\"\" id=\"backofficewrap\">\n            <ToastContainerCust />\n            <div className=\"container\">\n                <div className=\"text-center logo-payment-wrap\">\n                    {\n                        isModalOpen ?\n                            <div className=\"logo-payment-link\">\n                                <img className=\"logo-payment\" src={xtronLogo} alt=\"logo xtron\" />\n                            </div> :\n                            <Link to={{\n                                pathname: \"/\",\n                                state: lang\n                            }} className=\"logo-payment-link\">\n                                <img className=\"logo-payment\" src={xtronLogo} alt=\"logo xtron\" />\n                            </Link>\n                    }\n\n                </div>\n                <div className=\"row \" id=\"\">\n                    <div className=\"registration-main\" style={{ width: \"100%\" }}>\n                        <div className=\"xwrap\">\n                            <div className=\"text-center registration-items\">\n                                {\n                                    lang === 'English' ?\n                                        <h2>Registration Area</h2>\n                                        :\n                                        <h2>Área de registro</h2>\n                                }\n                                {\n                                    lang === 'English' ?\n                                        <h4>If you don't have a sponsor, use 1</h4>\n                                        :\n                                        <h4>Si no tiene un patrocinador, use 1</h4>\n                                }\n\n\n                                <MyClockLoader active={isModalOpen} />\n                                {id ?\n                                    <div className=\"registration-input\">\n                                        <input type=\"text\" value={id} className=\"sponsor-input-box text-center\" onChange={(e) => SetBackOfficeID(e.target.value)} readOnly />\n                                    </div>\n                                    :\n                                    <div className=\"registration-input\">\n                                        <input type=\"text\" value={backOfficeID} className=\"sponsor-input-box text-center\" onChange={(e) => SetBackOfficeID(e.target.value)} />\n                                    </div>\n                                }\n                                <div className=\"registration-btn\">\n                                    <button className=\"btn btn-success custombtn\" onClick={() => registationSubmit()} disabled={isModalOpen} >{lang === 'English' ? \"REGISTER\" : \"REGISTRO\"}</button>\n                                </div>\n                                {\n                                    lang === 'English' ?\n                                        <h4><FaExclamationCircle /> Please confirm your sponsor's ID before making a payment.</h4>\n                                        :\n                                        <h4><FaExclamationCircle /> Verifique el ID de su patrocinador antes de realizar un pago.</h4>\n                                }\n                                <div className=\"h20\"></div>\n                                {\n                                    isModalOpen ? <span><h4><FaSignInAlt /> Login</h4></span> : <Link to={{ pathname: \"/login\", state: lang }}><h4><FaSignInAlt /> Login</h4></Link>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Registration\n"],"sourceRoot":""}