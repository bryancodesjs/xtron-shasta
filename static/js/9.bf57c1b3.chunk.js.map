{"version":3,"sources":["assets/img/xtronlong.png","Utils/Utils.js","Common/ToastContainerCust.js","Components/Login/Login.js"],"names":["utils","tronWeb","contract","setTronWeb","at","ToastContainerCust","autoClose","position","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","Login","props","lang","location","state","history","useHistory","auth","useContext","AuthContext","useState","backOfficeID","SetBackOfficeID","loggedIn","setLoggedIn","installed","settronWeb","useEffect","a","Promise","resolve","tronWebState","window","ready","tries","timer","setInterval","TRONGRID_API","process","REACT_APP_NETWORK","TronWeb","clearInterval","Utils","CustomToastWithLink","loginSubmit","idToAddress","call","userLogIn","localStorage","removeItem","setItem","address","fromHex","push","pathname","reload","toast","error","console","log","warn","loginSubmit2","length","ReactGA","event","category","action","alert","show","className","id","to","src","xtronLogo","alt","style","width","onClick","document","getElementById","classList","add","remove","name","type","value","onChange","e","target"],"mappings":"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","file":"static/js/9.bf57c1b3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/xtronlong.12848e6d.png\";","//XTron Production Contract\n//const contract_address = \"TA4MuGPwQp6RUvD3uUsshZ4FNaYxWRKHbC\"\n\n\nconst contract_address = \"TQe5ExxEQpnBGBRkLu4mTDDGRLrudyugrD\"\n\nconst utils = {\n    tronWeb: false,\n    contract: false,\n\n    async setTronWeb(tronWeb) {\n        this.tronWeb = tronWeb;\n        this.contract = await tronWeb.contract().at(contract_address)\n    },\n\n};\n\nexport default utils;\n","import React from 'react'\nimport { ToastContainer } from 'react-toastify';\n\n\nfunction ToastContainerCust({ autoClose = 3000 }) {\n    return (\n        <ToastContainer\n            position=\"top-center\"\n            autoClose={autoClose}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n        />\n    )\n}\n\nexport default ToastContainerCust\n","import React, { useContext, useEffect, useState } from 'react'\nimport xtronLogo from '../../assets/img/xtronlong.png'\nimport { Link, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../context/AuthContext'\n// import TronWeb from 'tronweb'\nimport { FaSignInAlt } from \"react-icons/fa\";\nimport { toast } from 'react-toastify';\nimport ToastContainerCust from '../../Common/ToastContainerCust'\nimport TronWeb from 'tronweb'\nimport Utils from '../../Utils/Utils'\nimport ReactGA from 'react-ga';\n//ReactGA.initialize('G-6MQ8JWRM63'); /*Unique Google Analytics ID*/\n//ReactGA.pageview(window.location.pathname + window.location.search);\n\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nfunction switchTo1() {\n    \n    document.getElementById('method1btn').classList.add('switchbtn-active');\n    document.getElementById('method2btn').classList.remove('switchbtn-active');\n    document.getElementById('method1wrap').classList.remove('hide');\n    document.getElementById('method2wrap').classList.add('hide');\n}\n\nfunction switchTo2() {\n    \n    document.getElementById('method1btn').classList.remove('switchbtn-active');\n    document.getElementById('method2btn').classList.add('switchbtn-active');\n    document.getElementById('method1wrap').classList.add('hide');\n    document.getElementById('method2wrap').classList.remove('hide');\n}\n\nfunction Login(props) {\n    const lang = props.location && props.location.state\n    const history = useHistory();\n    const auth = useContext(AuthContext);\n    const [backOfficeID, SetBackOfficeID] = useState('')\n    const [loggedIn, setLoggedIn] = useState(false)\n\n    const [tronWeb, settronWeb] = useState({\n        installed: false,\n        loggedIn: false\n    })\n\n    useEffect(async () => {\n        (async function () {\n            await new Promise(resolve => {\n                const tronWebState = {\n                    installed: !!window.tronWeb,\n                    loggedIn: window.tronWeb && window.tronWeb.ready\n                };\n                if (tronWebState.installed) {\n                    settronWeb(tronWebState)\n                    return resolve();\n                }\n                let tries = 0;\n                const timer = setInterval(() => {\n                    if (tries >= 10) {\n                        const TRONGRID_API = process.env.REACT_APP_NETWORK;\n                        window.tronWeb = new TronWeb(\n                            TRONGRID_API,\n                            TRONGRID_API,\n                            TRONGRID_API\n                        );\n                        settronWeb({\n                            installed: false,\n                            loggedIn: false\n                        });\n                        clearInterval(timer);\n                        return resolve();\n                    }\n                    tronWebState.installed = !!window.tronWeb;\n                    tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n                    if (!tronWebState.installed) {\n                        return tries++;\n                    }\n                    else {\n                        clearInterval(timer);\n                    }\n                    settronWeb(tronWebState)\n                    resolve();\n                }, 100);\n            })\n            await Utils.setTronWeb(window.tronWeb);\n            setLoggedIn(true)\n        })();\n    }, []);\n\n    const CustomToastWithLink = () => (\n        <p>\n            {lang === 'English'\n                ?\n                <span>To access XTRON you must install TronLink.</span>\n                :\n                <span>Para acceder a XTRON debe instalar TronLink.</span>\n            }\n\n        </p>\n    );\n\n    const loginSubmit = async () => {\n        if (backOfficeID !== '') {\n            if (loggedIn) {\n                try {\n                    const idToAddress = await Utils.contract.idToAddress(backOfficeID).call();\n                    auth.userLogIn(true, 'Login');\n                    localStorage.removeItem('backOfficeID')\n                    localStorage.setItem('backOfficeID', TronWeb.address.fromHex(idToAddress));\n                    history.push({\n                        pathname: \"/back-office-main\",\n                        state: { lang: lang }\n                    })\n                    \n                    window.location.reload(false);\n                }\n                catch (error) {\n                    toast.error(\"Error\")\n                    console.log(error)\n                }\n            }\n            else {\n                toast.error(CustomToastWithLink)\n            }\n        }\n        else {\n            if (lang === 'English') {\n                toast.warn(\"Enter your ID\")\n            }\n            else {\n                toast.warn(\"Introduzca su ID\")\n            }\n\n        }\n    }\n\n    const loginSubmit2 = async () => {\n        if (backOfficeID !== '') {\n            if (loggedIn) {\n                if (backOfficeID.length > 33) {\n                    try {\n                \n                        try {\n                            auth.userLogIn(true, 'Login');\n                            localStorage.removeItem('backOfficeID')\n                            localStorage.setItem('backOfficeID', backOfficeID);\n                            history.push({\n                             pathname: \"/back-office-main\",\n                              state: { lang: lang }\n                            })\n                            ReactGA.event({\n                            category: 'User',\n                            action: 'Successful Login'\n                            });\n                            window.location.reload(false);\n                            }\n                        catch (error) {\n                            toast.error(\"Error\")\n                            console.log(error)\n                        }\n                \n                    } catch (error) {\n                        alert.show(\"Wallet Error\")\n                        \n                        }\n                } else {\n                    toast.error(\"Wallet invalida\")\n                }\n            }\n            else {\n                toast.error(CustomToastWithLink)\n            }\n        }\n        else {\n            if (lang === 'English') {\n                toast.warn(\"Enter your ID\")\n            }\n            else {\n                toast.warn(\"Introduzca su ID\")\n            }\n\n        }\n    }\n    return (\n        <div className=\"\" id=\"backofficewrap\">\n            <ToastContainerCust />\n            <div className=\"container\">\n                <div className=\"text-center logo-payment-wrap\">\n                    <Link to={{\n                        pathname: \"/\",\n                        state: lang\n                    }} className=\"logo-payment-link\">\n                        <img className=\"logo-payment\" src={xtronLogo} alt=\"logo xtron\" />\n                    </Link>\n                </div>\n                <div className=\"row \" id=\"\">\n                    <div className=\"\" style={{ width: \"100%\" }}>\n                        <div className=\"xwrap\">\n                            <div className=\"text-center registration-items\">\n                                {\n                                    lang === 'English' ?\n                                        <h2>Login Area</h2>\n                                        :\n                                        <h2>Área de inicio de sesión</h2>\n                                }\n                                {\n                                    lang === 'English' ?\n                                        <h4>Enter your ID/Wallet to access your backoffice</h4>\n                                        :\n                                        <h4>Ingrese su ID/Wallet para acceder a su backoffice</h4>\n                                }\n                                <div className=\"login-switch-wrap\">\n                                    <button id=\"method1btn\" className=\"switchbtn switchbtn-active\" onClick={() => switchTo1()}>ID</button>\n                                    <button id=\"method2btn\" className=\"switchbtn\" onClick={() => switchTo2()}> TRX Wallet</button>\n                                </div>\n                                <div id=\"method1wrap\" className=\"login-method-1\">\n                                    <div className=\"registration-input\">\n                                        <input id=\"customInput\" name=\"customInputName\" type=\"text\" value={backOfficeID} className=\"sponsor-input-box text-center\" onChange={(e) => SetBackOfficeID(e.target.value)} />\n                                    </div>\n                                    <div className=\"registration-btn\">\n                                        <button className=\"btn btn-success custombtn\" onClick={() => loginSubmit()} >LOGIN</button>\n                                    </div>\n                                    \n                                </div>\n\n                                <div id=\"method2wrap\" className=\"login-method-2 hide\">\n                                    <div className=\"registration-input\">\n                                        <input id=\"customInput\" name=\"customInputName\" type=\"text\" value={backOfficeID} className=\"sponsor-input-box text-center\" onChange={(e) => SetBackOfficeID(e.target.value)} />\n                                    </div>\n                                    <div className=\"registration-btn\">\n                                        <button className=\"btn btn-success custombtn\" onClick={() => loginSubmit2()} >LOGIN</button>\n                                    </div>\n                                    \n                                </div>\n                                \n                                <div className=\"h20\"></div>\n                                {\n                                    lang === 'English' ?\n                                        <h4>Don't have an account yet?</h4>\n                                        :\n                                        <h4>¿Aún no tienes una cuenta?</h4>\n                                }\n                                {\n                                    lang === 'English' ?\n                                        <Link to={{ pathname: \"/registration\", state: lang }}><h4><FaSignInAlt />  Register</h4></Link>\n                                        :\n                                        <Link to={{ pathname: \"/registration\", state: lang }}><h4><FaSignInAlt />  REGISTRO</h4></Link>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n"],"sourceRoot":""}